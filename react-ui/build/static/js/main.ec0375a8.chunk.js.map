{"version":3,"sources":["components/NavBar.js","services/contacts.js","components/AddContactForm.js","components/LinkFormModal.js","components/ContactCard.js","components/ContactsDisplay.js","components/Notification.js","components/About.js","components/Login.js","components/Signup.js","App.js","index.js"],"names":["NavBar","page","setPage","user","setUser","setContacts","handleNav","e","data","name","Menu","color","Item","header","Icon","as","active","onClick","localStorage","clear","baseUrl","config","token","getItem","parsedToken","JSON","parse","headers","Authorization","login","credentials","a","axios","post","response","setItem","stringify","signup","getAll","get","records","addNew","object","deleteContact","id","delete","addLink","editLink","urlId","patch","deleteLink","AddContactForm","options","notify","useState","setName","url","setUrl","site","setSite","addNewContact","preventDefault","contactObject","contacts","startsWith","concat","contactService","returnedObject","prevState","message","Form","onSubmit","Group","widths","Input","required","placeholder","label","type","value","onChange","target","Select","selection","search","Button","animated","icon","labelPosition","LinkFormModal","urlToEdit","siteToEdit","editUrl","setEditUrl","editSite","setEditSite","modalOpen","setModalOpen","handleClose","addNewLink","newObject","map","c","targetContact","find","updatedContactsKey","t","updatedContact","isTypeEdit","Modal","trigger","size","floated","content","undefined","className","open","onClose","closeIcon","style","padding","Header","Content","ContactCard","contact","setOpen","handleContactDelete","filter","handleLinkDelete","urlLink","urlName","Card","fluid","justifyContent","Confirm","onCancel","onConfirm","List","divided","relaxed","key","rel","href","charAt","toUpperCase","slice","Description","ContactsDisplay","marginTop","Notification","notification","Segment","inverted","secondary","About","textAlign","Subheader","Login","username","setUsername","password","setPassword","error","setError","loginHandler","event","Field","Message","onDismiss","Signup","App","setNotification","text","useEffect","loggedUserJson","window","getAllContacts","timeoutId","clearTimeout","setTimeout","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec0375a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst NavBar = ({ page, setPage, user, setUser, setContacts }) => {\r\n  const handleNav = (e, data) => {\r\n    setPage(data.name);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    setUser(null);\r\n    setContacts([]);\r\n    setPage(\"Login\");\r\n  };\r\n\r\n  return (\r\n    <Menu color=\"teal\">\r\n      <Menu.Item header>\r\n        <Icon name=\"user circle outline\" />\r\n        Profile Finder\r\n      </Menu.Item>\r\n      {user && (\r\n        <Menu.Item\r\n          as=\"a\"\r\n          name=\"Home\"\r\n          active={page === \"Home\"}\r\n          onClick={handleNav}\r\n        />\r\n      )}\r\n      {/* <Menu.Item\r\n        as=\"a\"\r\n        name=\"About\"\r\n        active={page === \"About\"}\r\n        onClick={handleNav}\r\n      /> */}\r\n      {user ? (\r\n        <Menu.Item as=\"a\" name=\"Logout\" onClick={handleLogout} />\r\n      ) : (\r\n        <>\r\n          <Menu.Item\r\n            as=\"a\"\r\n            name=\"Login\"\r\n            active={page === \"Login\"}\r\n            onClick={handleNav}\r\n          />\r\n          <Menu.Item\r\n            as=\"a\"\r\n            name=\"Signup\"\r\n            active={page === \"Signup\"}\r\n            onClick={handleNav}\r\n          />\r\n        </>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/contacts\";\r\nconst loginUrl = \"api/login\";\r\nconst signupUrl = \"api/signup\";\r\n\r\nconst config = () => {\r\n  const token = localStorage.getItem(\"loggedUser\");\r\n  const parsedToken = JSON.parse(token).token;\r\n  return {\r\n    headers: {\r\n      Authorization: `bearer ${parsedToken}`,\r\n    },\r\n  };\r\n};\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(loginUrl, credentials);\r\n  localStorage.setItem(\"loggedUser\", JSON.stringify(response.data));\r\n  return response.data;\r\n};\r\n\r\nconst signup = async (credentials) => {\r\n  const response = await axios.post(signupUrl, credentials);\r\n  localStorage.setItem(\"loggedUser\", JSON.stringify(response.data));\r\n  return response.data;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl, config());\r\n  return response.data.records;\r\n};\r\n\r\nconst addNew = async (object) => {\r\n  const response = await axios.post(baseUrl, object, config());\r\n  return response.data;\r\n};\r\n\r\nconst deleteContact = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config());\r\n  return response.data;\r\n};\r\n\r\nconst addLink = async (id, object) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/url`, object, config());\r\n  return response.data;\r\n};\r\n\r\nconst editLink = async (id, urlId, object) => {\r\n  const response = await axios.patch(\r\n    `${baseUrl}/${id}/url/${urlId}`,\r\n    object,\r\n    config()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst deleteLink = async (id, urlId) => {\r\n  const response = await axios.delete(\r\n    `${baseUrl}/${id}/url/${urlId}`,\r\n    config()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  login,\r\n  signup,\r\n  getAll,\r\n  addNew,\r\n  deleteContact,\r\n  addLink,\r\n  editLink,\r\n  deleteLink,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport contactService from \"../services/contacts\";\r\nimport { Form, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst AddContactForm = ({ setContacts, options, notify }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [site, setSite] = useState(\"\");\r\n\r\n  const addNewContact = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const contactObject = {\r\n      name,\r\n      contacts: {\r\n        url: url.startsWith(\"https://\") ? url : \"https://\".concat(url),\r\n        site,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const returnedObject = await contactService.addNew(contactObject);\r\n      setContacts((prevState) => prevState.concat(returnedObject));\r\n\r\n      notify(`New contact '${returnedObject.name}' added!`, \"green\");\r\n\r\n      setName(\"\");\r\n      setUrl(\"\");\r\n      setSite(\"\");\r\n    } catch (error) {\r\n      notify(`${error.response.data.message}`, \"red\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={addNewContact}>\r\n      <Form.Group widths=\"equal\">\r\n        <Form.Input\r\n          required\r\n          placeholder=\"Enter name\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Form.Select\r\n          required\r\n          value={site}\r\n          options={options}\r\n          label=\"Choose site name\"\r\n          selection\r\n          search\r\n          placeholder=\"Select a site\"\r\n          onChange={(e, data) => setSite(data.value)}\r\n        />\r\n        <Form.Input\r\n          required\r\n          placeholder=\"www.facebook.com\"\r\n          type=\"text\"\r\n          label=\"URL\"\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button\r\n        animated=\"vertical\"\r\n        color=\"teal\"\r\n        icon\r\n        labelPosition=\"left\"\r\n        type=\"submit\"\r\n      >\r\n        <Icon name=\"add user\" />\r\n        Add new contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n","import React, { useState } from \"react\";\r\nimport contactService from \"../services/contacts\";\r\nimport { Modal, Header, Form, Button } from \"semantic-ui-react\";\r\n\r\nconst LinkFormModal = ({\r\n  id,\r\n  urlId,\r\n  contacts,\r\n  setContacts,\r\n  type,\r\n  options,\r\n  urlToEdit,\r\n  siteToEdit,\r\n  notify,\r\n}) => {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [site, setSite] = useState(\"\");\r\n  const [editUrl, setEditUrl] = useState(urlToEdit);\r\n  const [editSite, setEditSite] = useState(siteToEdit);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const addNewLink = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newObject = {\r\n      url: url.startsWith(\"https://\") ? url : \"https://\".concat(url),\r\n      site,\r\n    };\r\n\r\n    try {\r\n      const returnedObject = await contactService.addLink(id, newObject);\r\n      setContacts(contacts.map((c) => (c.id !== id ? c : returnedObject)));\r\n\r\n      notify(`New ${newObject.site} link '${newObject.url}' added`, \"green\");\r\n\r\n      setUrl(\"\");\r\n      setSite(\"\");\r\n      handleClose();\r\n    } catch (error) {\r\n      notify(`${error.response.data.message}`, \"red\");\r\n    }\r\n  };\r\n\r\n  const editLink = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newObject = {\r\n      url: editUrl.startsWith(\"https://\")\r\n        ? editUrl\r\n        : \"https://\".concat(editUrl),\r\n      site: editSite,\r\n    };\r\n\r\n    const targetContact = contacts.find((c) => c.id === id);\r\n\r\n    try {\r\n      const returnedObject = await contactService.editLink(\r\n        id,\r\n        urlId,\r\n        newObject\r\n      );\r\n\r\n      const updatedContactsKey = targetContact.contacts.map((t) =>\r\n        t.id !== urlId ? t : returnedObject\r\n      );\r\n\r\n      const updatedContact = {\r\n        ...targetContact,\r\n        contacts: updatedContactsKey,\r\n      };\r\n\r\n      setContacts(contacts.map((c) => (c.id !== id ? c : updatedContact)));\r\n      notify(`${newObject.site} link edited to '${newObject.url}'`, \"green\");\r\n      handleClose();\r\n    } catch (error) {\r\n      notify(`${error.response.data.message}`, \"red\");\r\n    }\r\n  };\r\n\r\n  const isTypeEdit = type === \"edit\";\r\n\r\n  return (\r\n    <Modal\r\n      trigger={\r\n        <Button\r\n          color={isTypeEdit ? \"twitter\" : \"green\"}\r\n          size={isTypeEdit ? \"tiny\" : \"small\"}\r\n          onClick={handleOpen}\r\n          floated={isTypeEdit ? \"right\" : \"left\"}\r\n          icon={isTypeEdit ? \"edit\" : \"add\"}\r\n          content={isTypeEdit ? undefined : \"Add\"}\r\n          className={isTypeEdit ? \"edit-btn\" : \"add-btn\"}\r\n        />\r\n      }\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n      closeIcon\r\n      style={{ padding: \"10px\" }}\r\n    >\r\n      <Header\r\n        content={isTypeEdit ? \"Edit the link\" : \"Add new link to contact\"}\r\n      />\r\n      <Modal.Content>\r\n        <Form onSubmit={isTypeEdit ? editLink : addNewLink}>\r\n          <Form.Input\r\n            required\r\n            placeholder=\"For example, www.facebook.com\"\r\n            type=\"text\"\r\n            label=\"URL\"\r\n            value={isTypeEdit ? editUrl : url}\r\n            onChange={(e) =>\r\n              isTypeEdit ? setEditUrl(e.target.value) : setUrl(e.target.value)\r\n            }\r\n          />\r\n          <Form.Select\r\n            required\r\n            value={isTypeEdit ? editSite : site}\r\n            options={options}\r\n            label=\"Choose site name\"\r\n            selection\r\n            search\r\n            placeholder=\"Select a site\"\r\n            onChange={(e, data) =>\r\n              isTypeEdit ? setEditSite(data.value) : setSite(data.value)\r\n            }\r\n          />\r\n          <Button type=\"submit\" color=\"green\" floated=\"right\">\r\n            {isTypeEdit ? \"Edit\" : \"Add\"}\r\n          </Button>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LinkFormModal;\r\n","import React, { useState } from \"react\";\r\nimport contactService from \"../services/contacts\";\r\nimport LinkFormModal from \"./LinkFormModal\";\r\nimport { Card, List, Button, Confirm, Icon } from \"semantic-ui-react\";\r\n\r\nconst ContactCard = ({ contact, contacts, setContacts, options, notify }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleContactDelete = async (id) => {\r\n    setOpen(false);\r\n    try {\r\n      await contactService.deleteContact(id);\r\n      setContacts(contacts.filter((c) => c.id !== id));\r\n      notify(`Contact '${contact.name}' deleted!`, \"green\");\r\n    } catch (error) {\r\n      notify(`${error.response.data.message}`, \"red\");\r\n    }\r\n  };\r\n\r\n  const handleLinkDelete = async (id, urlId, urlLink, urlName) => {\r\n    setOpen(false);\r\n    const targetContact = contacts.find((c) => c.id === id);\r\n    const updatedContactsKey = targetContact.contacts.filter(\r\n      (t) => t.id !== urlId\r\n    );\r\n    const updatedContact = { ...targetContact, contacts: updatedContactsKey };\r\n\r\n    try {\r\n      await contactService.deleteLink(id, urlId);\r\n      setContacts(contacts.map((c) => (c.id !== id ? c : updatedContact)));\r\n      notify(`${urlName} link '${urlLink}' deleted!`, \"green\");\r\n    } catch (error) {\r\n      notify(`${error.response.data.message}`, \"red\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card fluid>\r\n      <Card.Content style={{ justifyContent: \"center\" }}>\r\n        <h2>\r\n          {contact.name}\r\n          <Button\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n            color=\"red\"\r\n            floated=\"right\"\r\n          >\r\n            <Icon name=\"user delete\" />\r\n            Delete\r\n          </Button>\r\n        </h2>\r\n        <Confirm\r\n          open={open}\r\n          onCancel={() => {\r\n            setOpen(false);\r\n          }}\r\n          onConfirm={() => handleContactDelete(contact.id)}\r\n        />\r\n      </Card.Content>\r\n      <Card.Content>\r\n        <List divided relaxed animated>\r\n          {contact.contacts.map((c) => (\r\n            <List.Item key={c + c.id}>\r\n              <List.Icon name={c.site} color=\"black\" />\r\n              <List.Content>\r\n                <List.Header>\r\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={c.url}>\r\n                    {c.site.charAt(0).toUpperCase() + c.site.slice(1)}\r\n                  </a>\r\n                  <LinkFormModal\r\n                    id={contact.id}\r\n                    urlId={c.id}\r\n                    contacts={contacts}\r\n                    setContacts={setContacts}\r\n                    options={options}\r\n                    urlToEdit={c.url}\r\n                    siteToEdit={c.site}\r\n                    type=\"edit\"\r\n                    notify={notify}\r\n                  />\r\n                  <Button\r\n                    color=\"google plus\"\r\n                    onClick={() => {\r\n                      setOpen(true);\r\n                    }}\r\n                    floated=\"right\"\r\n                    size=\"tiny\"\r\n                    icon=\"delete\"\r\n                    className=\"delete-btn\"\r\n                  />\r\n                </List.Header>\r\n                <List.Description as=\"a\">{c.url}</List.Description>\r\n                <Confirm\r\n                  open={open}\r\n                  onCancel={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                  onConfirm={() =>\r\n                    handleLinkDelete(contact.id, c.id, c.url, c.site)\r\n                  }\r\n                />\r\n              </List.Content>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n        <LinkFormModal\r\n          id={contact.id}\r\n          contacts={contacts}\r\n          setContacts={setContacts}\r\n          options={options}\r\n          type=\"add\"\r\n          notify={notify}\r\n        />\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import React from \"react\";\r\nimport ContactCard from \"./ContactCard\";\r\n\r\nconst ContactsDisplay = ({ contacts, setContacts, options, notify }) => {\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      {contacts.map((contact) => (\r\n        <ContactCard\r\n          contact={contact}\r\n          contacts={contacts}\r\n          setContacts={setContacts}\r\n          options={options}\r\n          key={contact.id}\r\n          notify={notify}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsDisplay;\r\n","import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Segment inverted color={notification.color} secondary>\r\n      {notification.message}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Header as=\"h1\" icon textAlign=\"center\">\r\n      <Icon name=\"address card outline\" />\r\n      About\r\n      <Header.Subheader>\r\n        <p>\r\n          A MERN stack app developed by{' '}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/lostghost-dev\"\r\n          >\r\n            Bigyan Koirala\r\n          </a>\r\n          ,{' '}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/amand33p\"\r\n          >\r\n            Amandeep S.\r\n          </a>{' '}\r\n          and{' '}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/sahilrajput03\"\r\n          >\r\n            Sahil Rajput\r\n          </a>\r\n          .\r\n        </p>\r\n        <p>\r\n          The original idea was, to have an app where we can save the profiles\r\n          of popular and powerful software devs, teachers, at one place for our\r\n          own comfort.\r\n        </p>\r\n      </Header.Subheader>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Message } from \"semantic-ui-react\";\r\n\r\nimport contactService from \"../services/contacts\";\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault();\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n\r\n    try {\r\n      const user = await contactService.login({ username, password });\r\n      setUser(user);\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={loginHandler}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input\r\n            placeholder=\"username\"\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Button type=\"submit\">Login</Button>\r\n      </Form>\r\n      {error && (\r\n        <Message\r\n          error\r\n          onDismiss={handleDismiss}\r\n          header=\"Invalid Request\"\r\n          content={error}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Message } from \"semantic-ui-react\";\r\n\r\nimport contactService from \"../services/contacts\";\r\n\r\nconst Signup = ({ setUser }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault();\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    try {\r\n      const user = await contactService.signup({ username, password });\r\n      setUser(user);\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={loginHandler}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input\r\n            placeholder=\"username\"\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Button type=\"submit\">Signup</Button>\r\n      </Form>\r\n      {error && (\r\n        <Message\r\n          onDismiss={handleDismiss}\r\n          error\r\n          header=\"Invalid Request\"\r\n          content={error}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport AddContactForm from \"./components/AddContactForm\";\r\nimport ContactsDisplay from \"./components/ContactsDisplay\";\r\nimport Notification from \"./components/Notification\";\r\nimport About from \"./components/About\";\r\nimport Login from \"./components/Login\";\r\nimport Signup from \"./components/Signup\";\r\nimport contactService from \"./services/contacts\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [page, setPage] = useState(\"Login\");\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const options = [\r\n    { key: \"fb\", text: \"Facebook\", value: \"facebook\", icon: \"facebook\" },\r\n    { key: \"ig\", text: \"Instagram\", value: \"instagram\", icon: \"instagram\" },\r\n    { key: \"tw\", text: \"Twitter\", value: \"twitter\", icon: \"twitter\" },\r\n    { key: \"gh\", text: \"Github\", value: \"github\", icon: \"github\" },\r\n    { key: \"yt\", text: \"Youtube\", value: \"youtube\", icon: \"youtube\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const loggedUserJson = window.localStorage.getItem(\"loggedUser\");\r\n    if (loggedUserJson) {\r\n      setUser(JSON.parse(loggedUserJson));\r\n      setPage(\"Home\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getAllContacts = async () => {\r\n      const contacts = await contactService.getAll();\r\n      setContacts(contacts);\r\n    };\r\n    if (user) {\r\n      getAllContacts();\r\n      setPage(\"Home\");\r\n    }\r\n  }, [user]);\r\n\r\n  let timeoutId = null;\r\n\r\n  const notify = (message, color) => {\r\n    clearTimeout(timeoutId);\r\n    setNotification({ message, color });\r\n    timeoutId = setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar\r\n        page={page}\r\n        setPage={setPage}\r\n        user={user}\r\n        setUser={setUser}\r\n        setContacts={setContacts}\r\n      />\r\n      {page === \"Home\" && (\r\n        <>\r\n          <Notification notification={notification} />\r\n          <AddContactForm\r\n            setContacts={setContacts}\r\n            options={options}\r\n            notify={notify}\r\n          />\r\n          <ContactsDisplay\r\n            contacts={contacts}\r\n            setContacts={setContacts}\r\n            options={options}\r\n            notify={notify}\r\n          />\r\n        </>\r\n      )}\r\n      {page === \"About\" && <About />}\r\n      {page === \"Login\" && <Login setUser={setUser} />}\r\n      {page === \"Signup\" && <Signup setUser={setUser} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}